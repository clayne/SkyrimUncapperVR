#ifdef _DEBUG

#include "ScanMemory.h"
#include "Utilities.h"

void ScanMemory()
{
	std::vector<UInt8> RegisterFunctions = { 0x40, 0x53, 0x55, 0x56, 0x57, 0x41, 0x56, 0x48, 0x83, 0xEC, 0x40, 0x48, 0xC7, 0x44, 0x24, 0x30, 0xFE, 0xFF, 0xFF, 0xFF, 0x48, 0x8B, 0xFA, 0x48, 0x8B, 0xF1, 0x48, 0x8D, 0x99, 0xC0, 0x00, 0x00, 0x00, 0x48, 0x89, 0x5C, 0x24, 0x28, 0x33, 0xD2, 0x48, 0x8B, 0xCB, 0xE8, 0x20, 0x1F, 0xF1, 0xFE, 0x90 };
	std::vector<UInt8> kHook_ModifyPerkPool_Ent = { 0x48, 0x8B, 0x15, 0x92, 0xE0, 0x61, 0x02, 0x0F, 0xB6, 0x8A, 0x01, 0x0B, 0x00, 0x00, 0x8B, 0xC1, 0x03, 0xC3, 0x78, 0x08, 0x02, 0xCB, 0x88, 0x8A, 0x01, 0x0B, 0x00, 0x00, 0x48, 0x83, 0xC4, 0x20, 0x5B, 0xC3 };
	std::vector<UInt8> kHook_SkillCapPatch_Ent = { 0xF3, 0x44, 0x0F, 0x10, 0x05, 0x67, 0x98, 0xE1, 0x00, 0x0F, 0x28, 0xF0, 0x41, 0x0F, 0x2F, 0xF0, 0x0F, 0x83, 0x74, 0x02, 0x00, 0x00, 0x48, 0x8D, 0x44, 0x24, 0x3C, 0x44, 0x0F, 0x29, 0x8C, 0x24, 0x20, 0x01, 0x00, 0x00, 0xF3, 0x44, 0x0F, 0x10, 0x0D, 0x53, 0xBC, 0xE1, 0x00, 0x4C, 0x8D, 0x4C };
	std::vector<UInt8> kHook_ExecuteLegendarySkill_Ent = { 0x0F, 0x82, 0x85, 0x00, 0x00, 0x00, 0x48, 0x8B, 0x0D, 0xDE, 0xA2, 0x61, 0x02, 0x48, 0x81, 0xC1, 0xB0, 0x00, 0x00, 0x00, 0x48, 0x8B, 0x01, 0xF3, 0x0F, 0x10, 0x15, 0x8C, 0xFD, 0x4D, 0x01, 0x8B, 0x56, 0x1C, 0xFF, 0x50, 0x20, 0x48, 0x8B, 0x05, 0xBF, 0xA2, 0x61, 0x02, 0x8B, 0x56, 0x1C, 0x48, 0x8B, 0x88, 0xB0, 0x09, 0x00, 0x00, 0xE8, 0x08, 0xF3, 0xE1, 0xFF, 0x8B, 0x4E, 0x1C, 0xE8, 0x20 };
	std::vector<UInt8> kHook_CheckConditionForLegendarySkill_Ent = { 0x8B, 0xD0, 0x48, 0x8D, 0x8F, 0xB0, 0x00, 0x00, 0x00, 0xFF, 0x53, 0x18, 0x0F, 0x2F, 0x05, 0x30, 0x27, 0xC4, 0x00, 0x0F, 0x82, 0x10, 0x0A, 0x00, 0x00, 0x45, 0x33, 0xFF, 0x4C, 0x89, 0x7D, 0x80, 0x44, 0x89, 0x7D, 0x88, 0x45, 0x33, 0xC0, 0x48, 0x8B, 0x15, 0xE5, 0x9C, 0x4E, 0x01, 0x48, 0x8D, 0x4D, 0x80, 0xE8, 0x04, 0x44, 0x85, 0xFF, 0x90, 0x48, 0x8D, 0x4C, 0x24, 0x50, 0xE8, 0x69, 0x24 };
	std::vector<UInt8> kHook_HideLegendaryButton_Ent = { 0x48, 0x8B, 0x0D, 0x7B, 0x24, 0x62, 0x02, 0x48, 0x81, 0xC1, 0xB0, 0x00, 0x00, 0x00, 0x48, 0x8B, 0x01, 0x8B, 0xD6, 0xFF, 0x50, 0x18, 0x0F, 0x2F, 0x05, 0x25, 0x09, 0xC4, 0x00, 0x72, 0x64, 0x48, 0x8D, 0x05, 0x54, 0x8B, 0xDC, 0x00, 0x48, 0x89, 0x85, 0xC0, 0x00, 0x00, 0x00, 0x4C, 0x89, 0x64, 0x24, 0x20, 0x4C, 0x8D, 0x0D, 0xD1, 0x5D, 0xC7, 0xFF, 0x44, 0x8B, 0xC7, 0x8D, 0x57, 0x16, 0x48 };
	std::vector<UInt8> ImproveSkillByTraining_Original = { 0x48, 0x8B, 0x89, 0xB0, 0x09, 0x00, 0x00, 0xB8, 0x01, 0x00, 0x00, 0x00, 0x44, 0x3B, 0xC0, 0x44, 0x0F, 0x42, 0xC0, 0xE9, 0xD8, 0x3A, 0x04, 0x00 };
	std::vector<UInt8> ImprovePlayerSkillPoints = { 0x4C, 0x8B, 0xDC, 0x55, 0x56, 0x41, 0x56, 0x48, 0x81, 0xEC, 0x60, 0x01, 0x00, 0x00, 0x8D, 0x42, 0xFA, 0x41, 0x0F, 0x29, 0x7B, 0xC8, 0x49, 0x8B, 0xE9, 0x0F, 0x28, 0xFA, 0x8B, 0xF2, 0x4C, 0x8B, 0xF1, 0x83, 0xF8, 0x11, 0x0F, 0x87, 0xB9, 0x02, 0x00, 0x00, 0x48, 0x8B, 0x0D, 0xC7, 0xB3, 0x7F, 0x02, 0x48, 0x81, 0xC1, 0xB0, 0x00, 0x00, 0x00, 0x41, 0x0F, 0x29, 0x73, 0xD8, 0x45, 0x0F, 0x29 };
	std::vector<UInt8> ImproveAttributeWhenLevelUp = { 0x40, 0x57, 0x48, 0x83, 0xEC, 0x30, 0x48, 0xC7, 0x44, 0x24, 0x20, 0xFE, 0xFF, 0xFF, 0xFF, 0x48, 0x89, 0x5C, 0x24, 0x40, 0x48, 0x89, 0x6C, 0x24, 0x48, 0x48, 0x89, 0x74, 0x24, 0x58, 0x0F, 0xB6, 0xDA, 0x48, 0x8B, 0xF9, 0x48, 0x8B, 0x15, 0xB5, 0x7A, 0x5E, 0x01, 0x48, 0x81, 0xC2, 0x28, 0x01, 0x00, 0x00, 0x48, 0x8B, 0x0D, 0xA7, 0x5B, 0x5E, 0x01, 0xE8, 0xD2, 0xD3, 0x61, 0x00, 0x84, 0xC0 };
	std::vector<UInt8> GetSkillCoefficients = { 0x81, 0xF9, 0xA3, 0x00, 0x00, 0x00, 0x77, 0x52, 0x48, 0x8B, 0x05, 0xB1, 0xF4, 0xA7, 0x01, 0x48, 0x63, 0xC9, 0x4C, 0x8B, 0x54, 0xC8, 0x08, 0x4D, 0x85, 0xD2, 0x74, 0x3E, 0x49, 0x8B, 0x82, 0x08, 0x01, 0x00, 0x00, 0x48, 0x85, 0xC0, 0x74, 0x32, 0x8B, 0x00, 0x89, 0x02, 0x49, 0x8B, 0x82, 0x08, 0x01, 0x00, 0x00, 0x8B, 0x48, 0x04, 0x41, 0x89, 0x08, 0x49, 0x8B, 0x82, 0x08, 0x01, 0x00, 0x00 };
	std::vector<UInt8> GetLevel = { 0x48, 0x8B, 0x49, 0x40, 0x48, 0x83, 0xC1, 0x30, 0xE9, 0xF3, 0xCA, 0xBC, 0xFF };
	std::vector<UInt8> ImproveLevelExpBySkillLevel_Original = { 0x48, 0x83, 0xEC, 0x18, 0xF3, 0x0F, 0x10, 0x1D, 0x5C, 0xAA, 0xE1, 0x00, 0x0F, 0x28, 0xD0, 0xF3, 0x0F, 0x10, 0x2D, 0xA1, 0xE2, 0xE2, 0x00, 0xF3, 0x0F, 0x58, 0xD3, 0x0F, 0x28, 0xE0, 0x0F, 0x29, 0x34, 0x24, 0x0F, 0x57, 0xF6, 0x0F, 0x28, 0xCA, 0xF3, 0x0F, 0x58, 0xCB, 0xF3, 0x0F, 0x59, 0xCA, 0xF3, 0x0F, 0x59, 0xCD, 0xF3, 0x0F, 0x2C, 0xC1, 0x66, 0x0F, 0x6E, 0xC0, 0x0F, 0x5B, 0xC0, 0xF3 };
	std::vector<UInt8> GetCurrentActorValue = {0x40, 0x55, 0x56, 0x57, 0x41, 0x56, 0x41, 0x57, 0x48, 0x83, 0xEC, 0x40, 0x48, 0xC7, 0x44, 0x24, 0x20, 0xFE, 0xFF, 0xFF, 0xFF, 0x48, 0x89, 0x5C, 0x24, 0x70, 0x0F, 0x29, 0x74, 0x24, 0x30, 0x48, 0x63, 0xFA, 0x48, 0x8B, 0xF1, 0x48, 0x8B, 0x05, 0x64, 0x75, 0x85, 0x01, 0x4C, 0x8B, 0x44, 0xF8, 0x08, 0x41, 0x8B, 0x40, 0x60, 0xC1, 0xE8, 0x12, 0xA8, 0x01, 0x74, 0x38, 0x48, 0x8B, 0x49, 0x40 };
	std::vector<UInt8> GetBaseActorValue = { 0x48, 0x89, 0x5C, 0x24, 0x18, 0x48, 0x89, 0x74, 0x24, 0x20, 0x57, 0x48, 0x83, 0xEC, 0x30, 0x48, 0x63, 0xDA, 0x4C, 0x8D, 0x44, 0x24, 0x40, 0x48, 0x8B, 0xF9, 0x0F, 0x57, 0xC0, 0x8B, 0xD3, 0xF3, 0x0F, 0x11, 0x44, 0x24, 0x40, 0x48, 0x81, 0xC1, 0x50, 0x01, 0x00, 0x00, 0xE8, 0xFF, 0xCD, 0x01, 0x00, 0x84, 0xC0, 0x0F, 0x85, 0xDE, 0x00, 0x00, 0x00, 0x48, 0x8D, 0x54, 0x24, 0x40, 0x8B, 0xCB };
	std::vector<UInt8> CalculateChargePointsPerUse_Original = { 0x48, 0x83, 0xEC, 0x48, 0x0F, 0x29, 0x74, 0x24, 0x30, 0x0F, 0x29, 0x7C, 0x24, 0x20, 0x0F, 0x28, 0xF8, 0xF3, 0x0F, 0x10, 0x05, 0x97, 0xC4, 0x9C, 0x01, 0xF3, 0x0F, 0x59, 0xC1, 0xF3, 0x0F, 0x10, 0x0D, 0xBB, 0xC4, 0x9C, 0x01, 0xE8, 0xC8, 0x50, 0xF5, 0x00, 0xF3, 0x0F, 0x10, 0x35, 0xE6, 0xB3, 0x12, 0x01, 0xF3, 0x0F, 0x10, 0x0D, 0xBE, 0xC4, 0x9C, 0x01, 0xF3, 0x0F, 0x5C, 0xF0, 0x0F, 0x28 };
	
	BinarySearch(RegisterFunctions);
}

#endif